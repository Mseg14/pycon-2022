{
  "errors": [],
  "generated_at": "2022-03-27T10:31:16Z",
  "metrics": {
    "./main.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 3,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 30,
      "nosec": 0,
      "skipped_tests": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 3,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 30,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "18     db = sqlite.connect(\"movies.db\")\n19     res = db.execute(\"select * from movies where title='{title}'\".format(title=title))\n20     movies = [dict(id=record[0], title=record[1], release=record[2]) for record in res.fetchall()]\n",
      "col_offset": 21,
      "filename": "./main.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.4/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "26     db = sqlite.connect(\"movies.db\")\n27     res = db.execute(\"select * from movies where id={movie_id}\".format(movie_id=movie_id))\n28     records = res.fetchone()\n",
      "col_offset": 21,
      "filename": "./main.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.4/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "35     db = sqlite.connect(\"movies.db\")\n36     res = db.execute(\"SELECT name from people JOIN stars ON people.id = stars.person_id JOIN movies \"\n37                      \"ON stars.movie_id = movies.id WHERE movies.id={movie_id}\".format(movie_id=movie_id))\n",
      "col_offset": 21,
      "filename": "./main.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 36,
      "line_range": [
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.4/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    }
  ]
}